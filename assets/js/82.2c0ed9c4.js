(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{530:function(e,o,t){"use strict";t.r(o);var n=t(2),r=Object(n.a)({},(function(){var e=this,o=e._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h2",{attrs:{id:"思路"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[e._v("#")]),e._v(" 思路")]),e._v(" "),o("p",[e._v("背景：群里的小伙伴提问，"),o("code",[e._v("window.location.href")]),e._v(" 能否被拦截\n1、第一想到的解决方案：使用 "),o("code",[e._v("Object.getOwnPropertyDescriptor(window.location, 'href')")]),e._v(" 获取其对象属性描述符；然后再使用 "),o("code",[e._v("Object.defineProperty")]),e._v(" 去重写 "),o("code",[e._v("window.location.href")]),e._v("\n2、发现再使用 "),o("code",[e._v("Object.defineProperty")]),e._v(" 劫持时，有报错。"),o("code",[e._v("Object.defineProperty")]),e._v("有生效的作用范围。\n3、好奇 "),o("code",[e._v("window.location.href")]),e._v(" 底层是如何实现的？\n4、思路：1、从原因入手去分析解决。2、搜索\n5、尝试使用其他的方式看看能否劫持 "),o("code",[e._v("window.location.href")]),e._v("\n6、"),o("code",[e._v("window.location")]),e._v(" 是一个只读的属性，js层面是不可以操作他的，想要拦截的话只能在浏览器层面去做\n7、比如 chrome 浏览器，制作一个插件去解决这个问题")])])}),[],!1,null,null,null);o.default=r.exports}}]);